#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ERP")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertConfig(Config instance);
    partial void UpdateConfig(Config instance);
    partial void DeleteConfig(Config instance);
    partial void InsertExamination(Examination instance);
    partial void UpdateExamination(Examination instance);
    partial void DeleteExamination(Examination instance);
    partial void InsertInMed(InMed instance);
    partial void UpdateInMed(InMed instance);
    partial void DeleteInMed(InMed instance);
    partial void InsertMedPlan(MedPlan instance);
    partial void UpdateMedPlan(MedPlan instance);
    partial void DeleteMedPlan(MedPlan instance);
    partial void InsertOutMed(OutMed instance);
    partial void UpdateOutMed(OutMed instance);
    partial void DeleteOutMed(OutMed instance);
    partial void InsertPrescription(Prescription instance);
    partial void UpdatePrescription(Prescription instance);
    partial void DeletePrescription(Prescription instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::Model.Properties.Settings.Default.DataConnect.SafeDbValue<string>(), mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Config> Config
		{
			get
			{
				return this.GetTable<Config>();
			}
		}
		
		public System.Data.Linq.Table<Examination> Examination
		{
			get
			{
				return this.GetTable<Examination>();
			}
		}
		
		public System.Data.Linq.Table<InMed> InMed
		{
			get
			{
				return this.GetTable<InMed>();
			}
		}
		
		public System.Data.Linq.Table<MedPlan> MedPlan
		{
			get
			{
				return this.GetTable<MedPlan>();
			}
		}
		
		public System.Data.Linq.Table<OutMed> OutMed
		{
			get
			{
				return this.GetTable<OutMed>();
			}
		}
		
		public System.Data.Linq.Table<Prescription> Prescription
		{
			get
			{
				return this.GetTable<Prescription>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Config")]
	public partial class Config : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SignID;
		
		private string _Name;
		
		private int _StyleID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSignIDChanging(int value);
    partial void OnSignIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStyleIDChanging(int value);
    partial void OnStyleIDChanged();
    #endregion
		
		public Config()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SignID
		{
			get
			{
				return this._SignID;
			}
			set
			{
				if ((this._SignID != value))
				{
					this.OnSignIDChanging(value);
					this.SendPropertyChanging();
					this._SignID = value;
					this.SendPropertyChanged("SignID");
					this.OnSignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleID", DbType="Int NOT NULL")]
		public int StyleID
		{
			get
			{
				return this._StyleID;
			}
			set
			{
				if ((this._StyleID != value))
				{
					this.OnStyleIDChanging(value);
					this.SendPropertyChanging();
					this._StyleID = value;
					this.SendPropertyChanged("StyleID");
					this.OnStyleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Examination")]
	public partial class Examination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CheckID;
		
		private string _CheckName;
		
		private string _DoctorID;
		
		private System.Nullable<int> _PatID;
		
		private decimal _CheckPrice;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCheckIDChanging(int value);
    partial void OnCheckIDChanged();
    partial void OnCheckNameChanging(string value);
    partial void OnCheckNameChanged();
    partial void OnDoctorIDChanging(string value);
    partial void OnDoctorIDChanged();
    partial void OnPatIDChanging(System.Nullable<int> value);
    partial void OnPatIDChanged();
    partial void OnCheckPriceChanging(decimal value);
    partial void OnCheckPriceChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    #endregion
		
		public Examination()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckID", DbType="Int NOT NULL")]
		public int CheckID
		{
			get
			{
				return this._CheckID;
			}
			set
			{
				if ((this._CheckID != value))
				{
					this.OnCheckIDChanging(value);
					this.SendPropertyChanging();
					this._CheckID = value;
					this.SendPropertyChanged("CheckID");
					this.OnCheckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CheckName
		{
			get
			{
				return this._CheckName;
			}
			set
			{
				if ((this._CheckName != value))
				{
					this.OnCheckNameChanging(value);
					this.SendPropertyChanging();
					this._CheckName = value;
					this.SendPropertyChanged("CheckName");
					this.OnCheckNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="VarChar(20)")]
		public string DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatID", DbType="Int")]
		public System.Nullable<int> PatID
		{
			get
			{
				return this._PatID;
			}
			set
			{
				if ((this._PatID != value))
				{
					this.OnPatIDChanging(value);
					this.SendPropertyChanging();
					this._PatID = value;
					this.SendPropertyChanged("PatID");
					this.OnPatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal CheckPrice
		{
			get
			{
				return this._CheckPrice;
			}
			set
			{
				if ((this._CheckPrice != value))
				{
					this.OnCheckPriceChanging(value);
					this.SendPropertyChanging();
					this._CheckPrice = value;
					this.SendPropertyChanged("CheckPrice");
					this.OnCheckPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InMed")]
	public partial class InMed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MedID;
		
		private string _MedBarCode;
		
		private string _Production;
		
		private System.DateTime _InDate;
		
		private System.DateTime _ProduteDate;
		
		private int _ReleaseDay;
		
		private int _Quantity;
		
		private decimal _MedBid;
		
		private decimal _MedUnitPrice;
		
		private string _Memary;
		
		private System.DateTime _DueDate;
		
		private bool _IsDelete;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMedIDChanging(int value);
    partial void OnMedIDChanged();
    partial void OnMedBarCodeChanging(string value);
    partial void OnMedBarCodeChanged();
    partial void OnProductionChanging(string value);
    partial void OnProductionChanged();
    partial void OnInDateChanging(System.DateTime value);
    partial void OnInDateChanged();
    partial void OnProduteDateChanging(System.DateTime value);
    partial void OnProduteDateChanged();
    partial void OnReleaseDayChanging(int value);
    partial void OnReleaseDayChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnMedBidChanging(decimal value);
    partial void OnMedBidChanged();
    partial void OnMedUnitPriceChanging(decimal value);
    partial void OnMedUnitPriceChanged();
    partial void OnMemaryChanging(string value);
    partial void OnMemaryChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public InMed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedID", DbType="Int NOT NULL")]
		public int MedID
		{
			get
			{
				return this._MedID;
			}
			set
			{
				if ((this._MedID != value))
				{
					this.OnMedIDChanging(value);
					this.SendPropertyChanging();
					this._MedID = value;
					this.SendPropertyChanged("MedID");
					this.OnMedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedBarCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MedBarCode
		{
			get
			{
				return this._MedBarCode;
			}
			set
			{
				if ((this._MedBarCode != value))
				{
					this.OnMedBarCodeChanging(value);
					this.SendPropertyChanging();
					this._MedBarCode = value;
					this.SendPropertyChanged("MedBarCode");
					this.OnMedBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Production", DbType="VarChar(20)")]
		public string Production
		{
			get
			{
				return this._Production;
			}
			set
			{
				if ((this._Production != value))
				{
					this.OnProductionChanging(value);
					this.SendPropertyChanging();
					this._Production = value;
					this.SendPropertyChanged("Production");
					this.OnProductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InDate", DbType="DateTime NOT NULL")]
		public System.DateTime InDate
		{
			get
			{
				return this._InDate;
			}
			set
			{
				if ((this._InDate != value))
				{
					this.OnInDateChanging(value);
					this.SendPropertyChanging();
					this._InDate = value;
					this.SendPropertyChanged("InDate");
					this.OnInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProduteDate", DbType="DateTime NOT NULL")]
		public System.DateTime ProduteDate
		{
			get
			{
				return this._ProduteDate;
			}
			set
			{
				if ((this._ProduteDate != value))
				{
					this.OnProduteDateChanging(value);
					this.SendPropertyChanging();
					this._ProduteDate = value;
					this.SendPropertyChanged("ProduteDate");
					this.OnProduteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDay", DbType="Int NOT NULL")]
		public int ReleaseDay
		{
			get
			{
				return this._ReleaseDay;
			}
			set
			{
				if ((this._ReleaseDay != value))
				{
					this.OnReleaseDayChanging(value);
					this.SendPropertyChanging();
					this._ReleaseDay = value;
					this.SendPropertyChanged("ReleaseDay");
					this.OnReleaseDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedBid", DbType="Decimal(18,2) NOT NULL")]
		public decimal MedBid
		{
			get
			{
				return this._MedBid;
			}
			set
			{
				if ((this._MedBid != value))
				{
					this.OnMedBidChanging(value);
					this.SendPropertyChanging();
					this._MedBid = value;
					this.SendPropertyChanged("MedBid");
					this.OnMedBidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedUnitPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal MedUnitPrice
		{
			get
			{
				return this._MedUnitPrice;
			}
			set
			{
				if ((this._MedUnitPrice != value))
				{
					this.OnMedUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._MedUnitPrice = value;
					this.SendPropertyChanged("MedUnitPrice");
					this.OnMedUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memary", DbType="VarChar(50)")]
		public string Memary
		{
			get
			{
				return this._Memary;
			}
			set
			{
				if ((this._Memary != value))
				{
					this.OnMemaryChanging(value);
					this.SendPropertyChanging();
					this._Memary = value;
					this.SendPropertyChanged("Memary");
					this.OnMemaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedPlan")]
	public partial class MedPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MedID;
		
		private string _DoctorID;
		
		private int _PatID;
		
		private string _Useage;
		
		private string _Frequency;
		
		private string _OneTimeUse;
		
		private string _Days;
		
		private string _TimesUse;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private int _SignID;
		
		private string _StyleName;
		
		private bool _IsDelete;
		
		private System.Nullable<int> _SpliteNum;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMedIDChanging(int value);
    partial void OnMedIDChanged();
    partial void OnDoctorIDChanging(string value);
    partial void OnDoctorIDChanged();
    partial void OnPatIDChanging(int value);
    partial void OnPatIDChanged();
    partial void OnUseageChanging(string value);
    partial void OnUseageChanged();
    partial void OnFrequencyChanging(string value);
    partial void OnFrequencyChanged();
    partial void OnOneTimeUseChanging(string value);
    partial void OnOneTimeUseChanged();
    partial void OnDaysChanging(string value);
    partial void OnDaysChanged();
    partial void OnTimesUseChanging(string value);
    partial void OnTimesUseChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnSignIDChanging(int value);
    partial void OnSignIDChanged();
    partial void OnStyleNameChanging(string value);
    partial void OnStyleNameChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnSpliteNumChanging(System.Nullable<int> value);
    partial void OnSpliteNumChanged();
    #endregion
		
		public MedPlan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedID", DbType="Int NOT NULL")]
		public int MedID
		{
			get
			{
				return this._MedID;
			}
			set
			{
				if ((this._MedID != value))
				{
					this.OnMedIDChanging(value);
					this.SendPropertyChanging();
					this._MedID = value;
					this.SendPropertyChanged("MedID");
					this.OnMedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatID", DbType="Int NOT NULL")]
		public int PatID
		{
			get
			{
				return this._PatID;
			}
			set
			{
				if ((this._PatID != value))
				{
					this.OnPatIDChanging(value);
					this.SendPropertyChanging();
					this._PatID = value;
					this.SendPropertyChanged("PatID");
					this.OnPatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Useage", DbType="VarChar(30)")]
		public string Useage
		{
			get
			{
				return this._Useage;
			}
			set
			{
				if ((this._Useage != value))
				{
					this.OnUseageChanging(value);
					this.SendPropertyChanging();
					this._Useage = value;
					this.SendPropertyChanged("Useage");
					this.OnUseageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="VarChar(30)")]
		public string Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OneTimeUse", DbType="VarChar(30)")]
		public string OneTimeUse
		{
			get
			{
				return this._OneTimeUse;
			}
			set
			{
				if ((this._OneTimeUse != value))
				{
					this.OnOneTimeUseChanging(value);
					this.SendPropertyChanging();
					this._OneTimeUse = value;
					this.SendPropertyChanged("OneTimeUse");
					this.OnOneTimeUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="VarChar(20)")]
		public string Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesUse", DbType="VarChar(20)")]
		public string TimesUse
		{
			get
			{
				return this._TimesUse;
			}
			set
			{
				if ((this._TimesUse != value))
				{
					this.OnTimesUseChanging(value);
					this.SendPropertyChanging();
					this._TimesUse = value;
					this.SendPropertyChanged("TimesUse");
					this.OnTimesUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignID", DbType="Int NOT NULL")]
		public int SignID
		{
			get
			{
				return this._SignID;
			}
			set
			{
				if ((this._SignID != value))
				{
					this.OnSignIDChanging(value);
					this.SendPropertyChanging();
					this._SignID = value;
					this.SendPropertyChanged("SignID");
					this.OnSignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleName", DbType="VarChar(100)")]
		public string StyleName
		{
			get
			{
				return this._StyleName;
			}
			set
			{
				if ((this._StyleName != value))
				{
					this.OnStyleNameChanging(value);
					this.SendPropertyChanging();
					this._StyleName = value;
					this.SendPropertyChanged("StyleName");
					this.OnStyleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpliteNum", DbType="Int")]
		public System.Nullable<int> SpliteNum
		{
			get
			{
				return this._SpliteNum;
			}
			set
			{
				if ((this._SpliteNum != value))
				{
					this.OnSpliteNumChanging(value);
					this.SendPropertyChanging();
					this._SpliteNum = value;
					this.SendPropertyChanged("SpliteNum");
					this.OnSpliteNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutMed")]
	public partial class OutMed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MedID;
		
		private string _MedBarCode;
		
		private string _MedName;
		
		private System.DateTime _LookDate;
		
		private string _DoctorID;
		
		private int _PatID;
		
		private decimal _MedUnitPrice;
		
		private decimal _MedPrice;
		
		private string _Useage;
		
		private string _Frequency;
		
		private string _OneTimeUse;
		
		private string _Days;
		
		private string _TimesUse;
		
		private bool _IsDelete;
		
		private System.Nullable<int> _SpliteNum;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMedIDChanging(int value);
    partial void OnMedIDChanged();
    partial void OnMedBarCodeChanging(string value);
    partial void OnMedBarCodeChanged();
    partial void OnMedNameChanging(string value);
    partial void OnMedNameChanged();
    partial void OnLookDateChanging(System.DateTime value);
    partial void OnLookDateChanged();
    partial void OnDoctorIDChanging(string value);
    partial void OnDoctorIDChanged();
    partial void OnPatIDChanging(int value);
    partial void OnPatIDChanged();
    partial void OnMedUnitPriceChanging(decimal value);
    partial void OnMedUnitPriceChanged();
    partial void OnMedPriceChanging(decimal value);
    partial void OnMedPriceChanged();
    partial void OnUseageChanging(string value);
    partial void OnUseageChanged();
    partial void OnFrequencyChanging(string value);
    partial void OnFrequencyChanged();
    partial void OnOneTimeUseChanging(string value);
    partial void OnOneTimeUseChanged();
    partial void OnDaysChanging(string value);
    partial void OnDaysChanged();
    partial void OnTimesUseChanging(string value);
    partial void OnTimesUseChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnSpliteNumChanging(System.Nullable<int> value);
    partial void OnSpliteNumChanged();
    #endregion
		
		public OutMed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedID", DbType="Int NOT NULL")]
		public int MedID
		{
			get
			{
				return this._MedID;
			}
			set
			{
				if ((this._MedID != value))
				{
					this.OnMedIDChanging(value);
					this.SendPropertyChanging();
					this._MedID = value;
					this.SendPropertyChanged("MedID");
					this.OnMedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedBarCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MedBarCode
		{
			get
			{
				return this._MedBarCode;
			}
			set
			{
				if ((this._MedBarCode != value))
				{
					this.OnMedBarCodeChanging(value);
					this.SendPropertyChanging();
					this._MedBarCode = value;
					this.SendPropertyChanged("MedBarCode");
					this.OnMedBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MedName
		{
			get
			{
				return this._MedName;
			}
			set
			{
				if ((this._MedName != value))
				{
					this.OnMedNameChanging(value);
					this.SendPropertyChanging();
					this._MedName = value;
					this.SendPropertyChanged("MedName");
					this.OnMedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookDate", DbType="DateTime NOT NULL")]
		public System.DateTime LookDate
		{
			get
			{
				return this._LookDate;
			}
			set
			{
				if ((this._LookDate != value))
				{
					this.OnLookDateChanging(value);
					this.SendPropertyChanging();
					this._LookDate = value;
					this.SendPropertyChanged("LookDate");
					this.OnLookDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatID", DbType="Int NOT NULL")]
		public int PatID
		{
			get
			{
				return this._PatID;
			}
			set
			{
				if ((this._PatID != value))
				{
					this.OnPatIDChanging(value);
					this.SendPropertyChanging();
					this._PatID = value;
					this.SendPropertyChanged("PatID");
					this.OnPatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedUnitPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal MedUnitPrice
		{
			get
			{
				return this._MedUnitPrice;
			}
			set
			{
				if ((this._MedUnitPrice != value))
				{
					this.OnMedUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._MedUnitPrice = value;
					this.SendPropertyChanged("MedUnitPrice");
					this.OnMedUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal MedPrice
		{
			get
			{
				return this._MedPrice;
			}
			set
			{
				if ((this._MedPrice != value))
				{
					this.OnMedPriceChanging(value);
					this.SendPropertyChanging();
					this._MedPrice = value;
					this.SendPropertyChanged("MedPrice");
					this.OnMedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Useage", DbType="VarChar(30)")]
		public string Useage
		{
			get
			{
				return this._Useage;
			}
			set
			{
				if ((this._Useage != value))
				{
					this.OnUseageChanging(value);
					this.SendPropertyChanging();
					this._Useage = value;
					this.SendPropertyChanged("Useage");
					this.OnUseageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Frequency", DbType="VarChar(30)")]
		public string Frequency
		{
			get
			{
				return this._Frequency;
			}
			set
			{
				if ((this._Frequency != value))
				{
					this.OnFrequencyChanging(value);
					this.SendPropertyChanging();
					this._Frequency = value;
					this.SendPropertyChanged("Frequency");
					this.OnFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OneTimeUse", DbType="VarChar(10)")]
		public string OneTimeUse
		{
			get
			{
				return this._OneTimeUse;
			}
			set
			{
				if ((this._OneTimeUse != value))
				{
					this.OnOneTimeUseChanging(value);
					this.SendPropertyChanging();
					this._OneTimeUse = value;
					this.SendPropertyChanged("OneTimeUse");
					this.OnOneTimeUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="VarChar(10)")]
		public string Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesUse", DbType="VarChar(10)")]
		public string TimesUse
		{
			get
			{
				return this._TimesUse;
			}
			set
			{
				if ((this._TimesUse != value))
				{
					this.OnTimesUseChanging(value);
					this.SendPropertyChanging();
					this._TimesUse = value;
					this.SendPropertyChanged("TimesUse");
					this.OnTimesUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpliteNum", DbType="Int")]
		public System.Nullable<int> SpliteNum
		{
			get
			{
				return this._SpliteNum;
			}
			set
			{
				if ((this._SpliteNum != value))
				{
					this.OnSpliteNumChanging(value);
					this.SendPropertyChanging();
					this._SpliteNum = value;
					this.SendPropertyChanged("SpliteNum");
					this.OnSpliteNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prescription")]
	public partial class Prescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DoctorID;
		
		private int _PatID;
		
		private string _Diagnosis;
		
		private decimal _MedCost;
		
		private decimal _MedPrice;
		
		private System.DateTime _CreateDate;
		
		private bool _IsDelete;
		
		private string _PastHistory;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDoctorIDChanging(string value);
    partial void OnDoctorIDChanged();
    partial void OnPatIDChanging(int value);
    partial void OnPatIDChanged();
    partial void OnDiagnosisChanging(string value);
    partial void OnDiagnosisChanged();
    partial void OnMedCostChanging(decimal value);
    partial void OnMedCostChanged();
    partial void OnMedPriceChanging(decimal value);
    partial void OnMedPriceChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnPastHistoryChanging(string value);
    partial void OnPastHistoryChanged();
    #endregion
		
		public Prescription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatID", DbType="Int NOT NULL")]
		public int PatID
		{
			get
			{
				return this._PatID;
			}
			set
			{
				if ((this._PatID != value))
				{
					this.OnPatIDChanging(value);
					this.SendPropertyChanging();
					this._PatID = value;
					this.SendPropertyChanged("PatID");
					this.OnPatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagnosis", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Diagnosis
		{
			get
			{
				return this._Diagnosis;
			}
			set
			{
				if ((this._Diagnosis != value))
				{
					this.OnDiagnosisChanging(value);
					this.SendPropertyChanging();
					this._Diagnosis = value;
					this.SendPropertyChanged("Diagnosis");
					this.OnDiagnosisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedCost", DbType="Decimal(18,2) NOT NULL")]
		public decimal MedCost
		{
			get
			{
				return this._MedCost;
			}
			set
			{
				if ((this._MedCost != value))
				{
					this.OnMedCostChanging(value);
					this.SendPropertyChanging();
					this._MedCost = value;
					this.SendPropertyChanged("MedCost");
					this.OnMedCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal MedPrice
		{
			get
			{
				return this._MedPrice;
			}
			set
			{
				if ((this._MedPrice != value))
				{
					this.OnMedPriceChanging(value);
					this.SendPropertyChanging();
					this._MedPrice = value;
					this.SendPropertyChanged("MedPrice");
					this.OnMedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastHistory", DbType="VarChar(500)")]
		public string PastHistory
		{
			get
			{
				return this._PastHistory;
			}
			set
			{
				if ((this._PastHistory != value))
				{
					this.OnPastHistoryChanging(value);
					this.SendPropertyChanging();
					this._PastHistory = value;
					this.SendPropertyChanged("PastHistory");
					this.OnPastHistoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
